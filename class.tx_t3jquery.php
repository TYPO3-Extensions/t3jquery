<?php/*************************************************************** * Copyright notice * * Based on t3mootools from Peter Klein <peter@umloud.dk> * (c) 2007-2010 Juergen Furrer (juergen.furrer@gmail.com) * All rights reserved * * This script is part of the TYPO3 project. The TYPO3 project is * free software; you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation; either version 2 of the License, or * (at your option) any later version. * * The GNU General Public License can be found at * http://www.gnu.org/copyleft/gpl.html. * A copy is found in the textfile GPL.txt and important notices to the license * from the author is found in LICENSE.txt distributed with these scripts. * * * This script is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * This copyright notice MUST APPEAR in all copies of the script! ***************************************************************/$confArray = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf']['t3jquery']);define('T3JQUERYVERSION', $confArray['jQueryVersion']."-".$confArray['jQueryUiVersion'].($confArray['jQueryTOOLSVersion'] ? "-".$confArray['jQueryTOOLSVersion'] : ""));if (file_exists(PATH_site . tx_t3jquery::getJqPath() . "jquery-".T3JQUERYVERSION.".js")) {	// check if dontIntegrateOnUID fit to the actual page	if (! $confArray['dontIntegrateOnUID'] || ! is_object($GLOBALS['TSFE']) || ! in_array($GLOBALS['TSFE']->id, array_values(t3lib_div::trimExplode(',', $confArray['dontIntegrateOnUID'], true)))) {		define('T3JQUERY', true);	}}/** * jQuery Javascript Loader functions * * You are encouraged to use this library in your own scripts! * * USE: * The class is intended to be used without creating an instance of it. * So: Don't instantiate - call functions with "tx_t3jquery::" prefixed the function name. * So use tx_t3jquery::[method-name] to refer to the functions, eg. 'tx_t3jquery::addJqJS()' * * Example: * * if (t3lib_extMgm::isLoaded('t3jquery')) { *   require_once(t3lib_extMgm::extPath('t3jquery').'class.tx_t3jquery.php'); * } * * * if (T3JQUERY === true) { *   tx_t3jquery::addJqJS(); * } else { *   // Here you add your own version of jQuery library, which is used if the *   // "t3jquery" extension is not installed. *   $GLOBALS['TSFE']->additionalHeaderData[] = .. * } * * @author Juergen Furrer (juergen.furrer@gmail.com) * @package TYPO3 * @subpackage t3jquery */class tx_t3jquery{	/**	 * @var object	 */	var $cObj;	/**	 * Adds the jquery script tag to the page headers first place	 * For frontend usage only.	 * @return	void	 */	function addJqJS()	{		if (t3lib_div::compat_version("4.3.0")) {			$GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['t3lib/class.t3lib_pagerenderer.php']['render-preProcess'][] = "EXT:t3jquery/class.tx_t3jquery.php:&tx_t3jquery->addJqJsByHook";		} else {			// Override the headerdata, THX to S. Delcroix (RVVN -  sdelcroix@rvvn.org)			$GLOBALS['TSFE']->additionalHeaderData['t3jquery.lib'] = tx_t3jquery::getJqJS();		}	}	/**	 * Hook function for adding script	 *	 * @param	array	Params for hook	 * @return	void	 */	function addJqJsByHook($params) {		$params['jsLibs']['jQuery'] = array(			'file'        => tx_t3jquery::getJqJS(true),			'type'        => 'text/javascript',			'section'     => 1,			'compress'    => false,			'forceOnTop'  => true,			'allWrap'     => ''		);	}	/**	 * Returns the path configuration and JS	 * @return string	 */	function getJqPath()	{		$confArray = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf']['t3jquery']);		$configDir = $confArray['configDir'] . (preg_match("/\/$/", $confArray['configDir']) ? "" : "/");		return $configDir;	}	/**	 * Get the jQuery UI script tag.	 * For frontend usage only.	 * @param	boolean		If true, only the URL is returned, not a full script tag	 * @return	string		HTML Script tag to load the jQuery JavaScript library	 */	function getJqJS($urlOnly = false)	{		$url = tx_t3jquery::getJqPath() . "jquery-".T3JQUERYVERSION.".js";		if (file_exists(PATH_site . $url)) {			return $urlOnly ? $url : '<script type="text/javascript" src="'.$url.'"></script>';		}		return false;	}	/**	 * Get the jquery script tag.	 * For backend usage only.	 * @param	boolean		If true, only the URL is returned, not a full script tag	 * @return	string		HTML Script tag to load the jQuery JavaScript library	 */	function getJqJSBE($urlOnly = false)	{		$url = $GLOBALS['BACK_PATH'] . tx_t3jquery::getJqPath() . "jquery-".T3JQUERYVERSION.".js";		if (file_exists(PATH_site . $url)) {			return $urlOnly ? $url : '<script type="text/javascript" src="'.$url.'"></script>';		}		return false;	}	/**	 * Function to be used from TypoScript to add Javascript after the jquery.js	 *	 * This is a small wrapper for adding javascripts script after the jQuery Library.	 * This is needed in some situations because headerdata added with "page.headerData"	 * is placed BEFORE the headerdata which is added using PHP.	 *	 * Usage:	 *	 * includeLibs.t3jquery = EXT:t3jquery/class.tx_t3jquery.php	 * page.10 = USER	 * page.10.userFunc = tx_t3jquery->addJS	 * page.10.jsfile = fileadmin/testscript.js	 * page.10.jsdata = alert('Hello World!');	 * page.10.tofooter = 1	 * 	 * @param	string		$content: Content input, ignore (just put blank string)	 * @param	array		$conf: TypoScript configuration of the plugin!	 * @return	void	 */	function addJS($content, $conf)	{		// If the jQuery lib is not added to page yet, add it!		tx_t3jquery::addJqJS();		// where should be he data stored (footer or header)		$jsLocation = ($conf['tofooter'] ? 'footer' : 'header');		// Append JS file		if ($conf['jsfile']) {			$jsfile = preg_replace('|^'.PATH_site.'|i','', t3lib_div::getFileAbsFileName($this->cObj->stdWrap($conf['jsfile'], $conf['jsfile.'])));			// Add the Javascript if file exists			if ($jsfile != '' && file_exists(PATH_site . $jsfile)) {				$temp_file = '<script type="text/javascript" src="'.$jsfile.'"></script>';				if (! in_array($temp_file, $GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsfile'][$jsLocation])) {					$GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsfile'][$jsLocation][] = $temp_file;				}			}		}		$GLOBALS['TSFE']->additionalHeaderData['t3jquery.jsfile'] = implode(chr(10), $GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsfile']['header']);		$GLOBALS['TSFE']->additionalFooterData['t3jquery.jsfile'] = implode(chr(10), $GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsfile']['footer']);		// add JS data		if ($conf['jsdata']) {			$jsdata = $this->cObj->stdWrap($conf['jsdata'], $conf['jsdata.']);			if ($jsdata != '') {				// add the array to the TYPO3_CONF_VARS				$jsdata = trim($jsdata);				if (! in_array($jsdata, $GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsdata'][$jsLocation])) {					$GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsdata'][$jsLocation][] = $jsdata;				}			}		}		$GLOBALS['TSFE']->additionalHeaderData['t3jquery.jsdata'] = t3lib_div::wrapJS(implode(chr(10), $GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsdata']['header']), true);		$GLOBALS['TSFE']->additionalFooterData['t3jquery.jsdata'] = t3lib_div::wrapJS(implode(chr(10), $GLOBALS['TYPO3_CONF_VARS']['EXTCONF']['t3jquery']['jsdata']['footer']), true);	}}if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/t3jquery/class.tx_t3jquery.php'])	{	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/t3jquery/class.tx_t3jquery.php']);}?>